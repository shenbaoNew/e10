//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.8762
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApplication11 {
    using System;
    using System.Collections.Generic;
    using Digiwin.Common.Torridity;
    using Digiwin.Common.Torridity.Metadata;
    using Digiwin.Common.Configuration;
    
    
    [Digiwin.Common.Services.DataEntityRegisterAttribute()]
    public sealed partial class Customer : DependencyObjectView {
        
        /// <summary>
        /// Typekey
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707:IdentifiersShouldNotContainUnderscores")]
        public const string TYPE_KEY = "Customer";
        
        /// <summary>
        /// PrimaryKey
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes")]
        public static readonly DependencyProperty IDProperty;
        
        /// <summary>
        /// 单据类型编号
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes")]
        public static readonly DependencyProperty CODEProperty;
        
        /// <summary>
        /// 单据类型名称
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes")]
        public static readonly DependencyProperty NAMEProperty;
        
        /// <summary>
        /// DefaultType
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes")]
        public static readonly DependencyObjectType DefaultType;
        
        /// <summary>
        /// 构造函数
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1810:InitializeReferenceTypeStaticFieldsInline")]
        static Customer() {
            // DefaultType
            DefaultType = new DependencyObjectType("Customer", new Attribute[] {
                        new DataEntityAttribute("ID"),
                        new Digiwin.Common.Services.DatabaseDataEntityTypeAttribute()});
            // ID
            SimplePropertyAttribute simplePropertyAttribute0 = new SimplePropertyAttribute(GeneralDBType.Guid);
            simplePropertyAttribute0.Description = "PrimaryKey";
            IDProperty = DefaultType.RegisterSimpleProperty("ID", typeof(System.Guid), null, false, new Attribute[] {
                        simplePropertyAttribute0});
            // CODE
            SimplePropertyAttribute simplePropertyAttribute1 = new SimplePropertyAttribute(GeneralDBType.String);
            simplePropertyAttribute1.Description = "单据类型编号";
            simplePropertyAttribute1.Size = 10;
            CODEProperty = DefaultType.RegisterSimpleProperty("CODE", typeof(string), null, false, new Attribute[] {
                        simplePropertyAttribute1});
            // NAME
            SimplePropertyAttribute simplePropertyAttribute2 = new SimplePropertyAttribute(GeneralDBType.String);
            simplePropertyAttribute2.Description = "单据类型名称";
            simplePropertyAttribute2.Size = 20;
            NAMEProperty = DefaultType.RegisterSimpleProperty("NAME", typeof(string), null, false, new Attribute[] {
                        simplePropertyAttribute2});
        }
        
        /// <summary>
        /// 构造函数
        /// </summary>
        public Customer() : 
                base() {
        }
        
        /// <summary>
        /// 构造函数
        /// </summary>
        public Customer(DependencyObject obj) : 
                base(obj) {
        }
        
        /// <summary>
        /// PrimaryKey
        /// </summary>
        public System.Guid ID {
            get {
                return ((System.Guid)(this.DependencyObject[Customer.IDProperty]));
            }
            set {
                this.DependencyObject[Customer.IDProperty] = value;
            }
        }
        
        /// <summary>
        /// 单据类型编号
        /// </summary>
        public string CODE {
            get {
                return ((string)(this.DependencyObject[Customer.CODEProperty]));
            }
            set {
                this.DependencyObject[Customer.CODEProperty] = value;
            }
        }
        
        /// <summary>
        /// 单据类型名称
        /// </summary>
        public string NAME {
            get {
                return ((string)(this.DependencyObject[Customer.NAMEProperty]));
            }
            set {
                this.DependencyObject[Customer.NAMEProperty] = value;
            }
        }
    }
}
namespace WindowsFormsApplication11 {
    using System;
    using System.Collections.Generic;
    using Digiwin.Common.Torridity;
    using Digiwin.Common.Torridity.Metadata;
    using Digiwin.Common.Configuration;
    
    
    [Digiwin.Common.Services.DataEntityRegisterAttribute()]
    public sealed partial class Product : DependencyObjectView {
        
        /// <summary>
        /// Typekey
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707:IdentifiersShouldNotContainUnderscores")]
        public const string TYPE_KEY = "Product";
        
        /// <summary>
        /// PrimaryKey
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes")]
        public static readonly DependencyProperty IDProperty;
        
        /// <summary>
        /// 单据类型编号
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes")]
        public static readonly DependencyProperty CODEProperty;
        
        /// <summary>
        /// 单据类型名称
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes")]
        public static readonly DependencyProperty NAMEProperty;
        
        /// <summary>
        /// DefaultType
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes")]
        public static readonly DependencyObjectType DefaultType;
        
        /// <summary>
        /// 构造函数
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1810:InitializeReferenceTypeStaticFieldsInline")]
        static Product() {
            // DefaultType
            DefaultType = new DependencyObjectType("Product", new Attribute[] {
                        new DataEntityAttribute("ID"),
                        new Digiwin.Common.Services.DatabaseDataEntityTypeAttribute()});
            // ID
            SimplePropertyAttribute simplePropertyAttribute0 = new SimplePropertyAttribute(GeneralDBType.Guid);
            simplePropertyAttribute0.Description = "PrimaryKey";
            IDProperty = DefaultType.RegisterSimpleProperty("ID", typeof(System.Guid), null, false, new Attribute[] {
                        simplePropertyAttribute0});
            // CODE
            SimplePropertyAttribute simplePropertyAttribute1 = new SimplePropertyAttribute(GeneralDBType.String);
            simplePropertyAttribute1.Description = "单据类型编号";
            simplePropertyAttribute1.Size = 10;
            CODEProperty = DefaultType.RegisterSimpleProperty("CODE", typeof(string), null, false, new Attribute[] {
                        simplePropertyAttribute1});
            // NAME
            SimplePropertyAttribute simplePropertyAttribute2 = new SimplePropertyAttribute(GeneralDBType.String);
            simplePropertyAttribute2.Description = "单据类型名称";
            simplePropertyAttribute2.Size = 20;
            NAMEProperty = DefaultType.RegisterSimpleProperty("NAME", typeof(string), null, false, new Attribute[] {
                        simplePropertyAttribute2});
        }
        
        /// <summary>
        /// 构造函数
        /// </summary>
        public Product() : 
                base() {
        }
        
        /// <summary>
        /// 构造函数
        /// </summary>
        public Product(DependencyObject obj) : 
                base(obj) {
        }
        
        /// <summary>
        /// PrimaryKey
        /// </summary>
        public System.Guid ID {
            get {
                return ((System.Guid)(this.DependencyObject[Product.IDProperty]));
            }
            set {
                this.DependencyObject[Product.IDProperty] = value;
            }
        }
        
        /// <summary>
        /// 单据类型编号
        /// </summary>
        public string CODE {
            get {
                return ((string)(this.DependencyObject[Product.CODEProperty]));
            }
            set {
                this.DependencyObject[Product.CODEProperty] = value;
            }
        }
        
        /// <summary>
        /// 单据类型名称
        /// </summary>
        public string NAME {
            get {
                return ((string)(this.DependencyObject[Product.NAMEProperty]));
            }
            set {
                this.DependencyObject[Product.NAMEProperty] = value;
            }
        }
    }
}
namespace WindowsFormsApplication11 {
    using System;
    using System.Collections.Generic;
    using Digiwin.Common.Torridity;
    using Digiwin.Common.Torridity.Metadata;
    using Digiwin.Common.Configuration;
    
    
    [Digiwin.Common.Services.DataEntityRegisterAttribute()]
    public sealed partial class Quotation : DependencyObjectView {
        
        /// <summary>
        /// Typekey
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707:IdentifiersShouldNotContainUnderscores")]
        public const string TYPE_KEY = "Quotation";
        
        /// <summary>
        /// PrimaryKey
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes")]
        public static readonly DependencyProperty IDProperty;
        
        /// <summary>
        /// 单据类型编号
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes")]
        public static readonly DependencyProperty CODEProperty;
        
        /// <summary>
        /// 单据类型名称
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes")]
        public static readonly DependencyProperty NAMEProperty;
        
        /// <summary>
        /// DefaultType
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes")]
        public static readonly DependencyObjectType DefaultType;
        
        /// <summary>
        /// 构造函数
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1810:InitializeReferenceTypeStaticFieldsInline")]
        static Quotation() {
            // DefaultType
            DefaultType = new DependencyObjectType("Quotation", new Attribute[] {
                        new DataEntityAttribute("ID"),
                        new Digiwin.Common.Services.DatabaseDataEntityTypeAttribute()});
            // ID
            SimplePropertyAttribute simplePropertyAttribute0 = new SimplePropertyAttribute(GeneralDBType.Guid);
            simplePropertyAttribute0.Description = "PrimaryKey";
            IDProperty = DefaultType.RegisterSimpleProperty("ID", typeof(System.Guid), null, false, new Attribute[] {
                        simplePropertyAttribute0});
            // CODE
            SimplePropertyAttribute simplePropertyAttribute1 = new SimplePropertyAttribute(GeneralDBType.String);
            simplePropertyAttribute1.Description = "单据类型编号";
            simplePropertyAttribute1.Size = 10;
            CODEProperty = DefaultType.RegisterSimpleProperty("CODE", typeof(string), null, false, new Attribute[] {
                        simplePropertyAttribute1});
            // NAME
            SimplePropertyAttribute simplePropertyAttribute2 = new SimplePropertyAttribute(GeneralDBType.String);
            simplePropertyAttribute2.Description = "单据类型名称";
            simplePropertyAttribute2.Size = 20;
            NAMEProperty = DefaultType.RegisterSimpleProperty("NAME", typeof(string), null, false, new Attribute[] {
                        simplePropertyAttribute2});
        }
        
        /// <summary>
        /// 构造函数
        /// </summary>
        public Quotation() : 
                base() {
        }
        
        /// <summary>
        /// 构造函数
        /// </summary>
        public Quotation(DependencyObject obj) : 
                base(obj) {
        }
        
        /// <summary>
        /// PrimaryKey
        /// </summary>
        public System.Guid ID {
            get {
                return ((System.Guid)(this.DependencyObject[Quotation.IDProperty]));
            }
            set {
                this.DependencyObject[Quotation.IDProperty] = value;
            }
        }
        
        /// <summary>
        /// 单据类型编号
        /// </summary>
        public string CODE {
            get {
                return ((string)(this.DependencyObject[Quotation.CODEProperty]));
            }
            set {
                this.DependencyObject[Quotation.CODEProperty] = value;
            }
        }
        
        /// <summary>
        /// 单据类型名称
        /// </summary>
        public string NAME {
            get {
                return ((string)(this.DependencyObject[Quotation.NAMEProperty]));
            }
            set {
                this.DependencyObject[Quotation.NAMEProperty] = value;
            }
        }
    }
}
